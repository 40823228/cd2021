var tipuesearch = {"pages": [{'title': '首頁', 'text': '小組組員:40823204 40823220 40823228 40823242 \n 個人倉儲: https://github.com/40823228/cd2021 \n 二人小組網站: https://40823228.github.io/stage1-bg14/content/index.html \n 四人小組網站: https://40823204.github.io/stage2-bg14/content/index.html \n 八人小組倉儲: https://github.com/40823221/stage3-bg5 \n 二人小組倉儲: https://github.com/40823228/stage1-bg14 \n 四人小組倉儲: https://40823204.github.io/stage2-bg14/content/index.html \n 八人小組倉儲: https://40823221.github.io/stage3-bg5/content/index.html \n', 'tags': '', 'url': '首頁.html'}, {'title': 'Stage1 進度', 'text': '分工:40823228(成品零件繪製、模擬，報告影片) \n \xa0 \xa0 \xa0 \xa0\xa0 40823242(初稿零件繪製、模擬，報告影片) \n 進度表:W1 架設網站 討論主題 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0W2 初稿完成 修改並討論 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0W3 油壓升降平台 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0W4 報告和彩現圖 \n', 'tags': '', 'url': 'Stage1 進度.html'}, {'title': '專題動機', 'text': '在工地裡,經常需要在高處實施作業,可是目前在外面看到的作業平台都是用組裝式的,不僅延長工作時間,在搭建過程,也有極大的掉落風險,所以我們小組設計出”油壓式升降平台”,不僅方便攜帶,也大幅減少風險與搭建平台的作業時間。 \n 拆卸式鷹架(一) 拆卸式 鷹架(二) \n 圖片資料來源 \n', 'tags': '', 'url': '專題動機.html'}, {'title': 'W1 架設網站 討論主題', 'text': '3/3第一次討論 \n \n 因為第一次討論主題與他組雷同，故修改為"升降平台" \n 3/5第二次討論 \n \n 3/10第三次討論 \n 經過討論與參考相關資料後 繪製出"升降平台"初稿 \n \n', 'tags': '', 'url': 'W1 架設網站 討論主題.html'}, {'title': 'W2 初稿完成並討論', 'text': '升降平台初稿模擬影片 使用SolidWorks2017繪製  檔案下載 \n \n \n 等角圖 \n 前視圖 右視圖 \n 討論:在畫完小組專題”升降平台”之後,發現初稿的作動方式,好像有點單調,經過小組的討論之後,想了其他幾種作動方式,例如: 油壓式、齒輪式、皮帶輪式等等,而我們最終選擇油壓式,因為油壓可以提供非常大的力量,不僅承重能力提升,也使此裝置更為安全 ! \n', 'tags': '', 'url': 'W2 初稿完成並討論.html'}, {'title': 'W3 油壓升降平台', 'text': '油壓升降平台模擬影片 使用SolidWorks2017繪製  檔案下載 \n \n \n 前視圖 \n \n 右視圖 \n \n 上視圖 \n 討論:經過初稿模擬測試之後,在這次的版本,使用了油壓式的作動方式,解決了在初稿略顯單調且裝置不安全的問題 ! \n', 'tags': '', 'url': 'W3 油壓升降平台.html'}, {'title': 'W4 報告和彩現圖', 'text': '專題題目 : 升降平台\xa0 使用SolidWorks2017繪製\xa0 檔案下載 \n 影片報告: \n 彩現圖: \n \n \n \n \n \n', 'tags': '', 'url': 'W4 報告和彩現圖.html'}, {'title': '心得和PDF檔案', 'text': '心得: \n 這次的協同產品設計的前四周是採取二人分組，因為剛接觸協同產品設計，所以在各項作業上都有一定的陌生，不過隨著討論次數的增加，也越來越上手，這次的分組專題讓我體會到如果用傳統的開會討論，肯定會耗費更多的時間，所以接下來的四人小組、八人小組，如果工作分配得宜的話，一定可以創造更有價值性的產品。 \n PDF檔案下載 \n \n', 'tags': '', 'url': '心得和PDF檔案.html'}, {'title': 'Stage2 進度', 'text': '', 'tags': '', 'url': 'Stage2 進度.html'}, {'title': 'W5 各組影片報告長度', 'text': '\n 載入中… \n  小組報告 \n', 'tags': '', 'url': 'W5 各組影片報告長度.html'}, {'title': 'W6 四人小組討論', 'text': '\n \n 討論結果 : 省力搬運機 \n 動機: 在工地裡，經常需要用到台車搬運東西，例如裝著水泥的箱子，如果 是要靠人力搬運的話，不僅會造成工作效率的減少，也會使搬運人員 的體力大量消耗，所以討論過後，我們小組決定設計”省力搬運機”， 不僅解決搬運問題，也大幅地提高工作效率與人員體力的損耗。 \n \n 參考影片來源 \n', 'tags': '', 'url': 'W6 四人小組討論.html'}, {'title': 'W7 省力搬運機構', 'text': '搬運機.zip \xa0零件下載\xa0\xa0使用inventer2018繪製 \n SolidWorks 模擬影片 \n \n cns 150-A-2.2 \n \n CNS 3121-M2x12 \n \n CNS 3121-M2x12-2 \n \n CNS 3128-M2x0.4 \n \n 支架 \n \n 底桿 \n \n 後輪架 \n \n 側邊桿一號 \n \n 側邊桿二號 \n 側邊桿三號 \n \n 側邊桿四號 \n \n 連接桿 \n \n 握桿 \n \n 普力桶 \n \n 鉚釘 \n \n 輪子 \n \n 輪子架 \n \n', 'tags': '', 'url': 'W7 省力搬運機構.html'}, {'title': 'W8 程式模擬', 'text': 'CoppliaSim 4.0 模擬 \n \n 問題:因使用CoppeliaSim模擬時，發現我們組合圖使用太多零件組合，導致爆炸後有70多個零件，我們已經盡力模擬，但零件太多很難察覺是哪個環節出現錯誤，所以小組討論後決定使用Inventor和solidworks進行模擬。 \n SolidWorks 2017 模擬 \n \n 問題: 因為使用 CoppliaSim 模擬時，可能因為對程式不熟悉， 導致模擬失敗後，討論決定使用 SolidWorks 模擬之後，完成 省力搬運機模擬。 \n Inventor 2018 模擬 \n \n 問題: 這此不僅使用了 CoppliaSim 和 SolidWorks 進行模擬， 還用了 Inventor 進行模擬，不僅更完整演示本組專題，作動 方式與功能，更能體會到在不同軟體模擬可能出現的狀況。 \n 使用 CoppeliaSim4.0 SolidWorks2017 Inventor 2018 模擬 \n', 'tags': '', 'url': 'W8 程式模擬.html'}, {'title': 'W9 個人心得', 'text': '本次的專題，是採取四人小組，較上次的兩人小組多了兩個 人，而此次的專題製作過程，讓我體會到四人小組較以往二 人小組的差別，過程中有好有壞，優點是做起事來，不僅更 加快速，能做的事情也更多了，而且遇到問題時，大家可以 互相討論，每個人的想法不同，也能看到更多不一樣的東西， 而缺點就是，因為組員增加了，所以在網站的維護方面，也 比較困難，所以小組必須要常常進行討論且共同維護網站， 接下來要進去八人小組，若工作分配得宜的話，肯定可以創 造更好的專題。 \n', 'tags': '', 'url': 'W9 個人心得.html'}, {'title': '應力分析', 'text': '\n 這次不僅做了省力搬運機的作動模擬影片，還增加了該機構 主要承受力處零件的分析，由於此機構是在工地使用，為了 不造成工安意外或者是工具設計不良上導致種種問題，所以 應力分析固然重要。 \n \n 使用 Inventor 2018 進行分析 \n \n', 'tags': '', 'url': '應力分析.html'}, {'title': '小組報告', 'text': 'PDF 檔案下載 \n \n', 'tags': '', 'url': '小組報告.html'}, {'title': 'Stage3 進度', 'text': '', 'tags': '', 'url': 'Stage3 進度.html'}, {'title': 'W10 新增stage1、2工作分配', 'text': '', 'tags': '', 'url': 'W10 新增stage1、2工作分配.html'}, {'title': 'stage1-1', 'text': 'bg14 \n 專題主題: 升降平台 \n 組員/分工: \n 40823228/成品零件繪製、模擬、報告影片 \n 40823242/初稿零件繪製、模擬、報告影片 \n \n 主題簡述: \n 在工地裡，經常需要在高處實施作業，可是 目前在外面看到的作業平台都是用組裝式 的，不僅延長工作時間，在搭建過程，也有 極大的掉落風險，所以我們小組設計出”油 壓式升降平台”，不僅方便攜帶，也大幅減 少風險與搭建平台的作業時間。 \n - \n bg24 \n 專題主題:升降裝置 \n 組員/分工: \n 40823204/CoppeliaSim 測試、分組網站、PDF 製 作、reveal 簡報 \n 40823220/繪圖(Inventor)、reveal 簡報 \n \n 主題簡述: \n 方便搬運重物：大型可用來載人、小型可用在各 種自動化機械。 \n - \n bg16 \n 專題主題:氣動馬達 \n 組員/分工: \n 40823221/ CoppeliaSim 模擬、PDF製作、合併倉儲及網站 \n 40823237/ 繪製圖檔、reveal製作、倉儲推送及維護 \n \n 主題簡述: \n 因為對汽車作動原理有些許興趣，所以以引擎 的活塞與皮帶輪關係做變化。 \n', 'tags': '', 'url': 'stage1-1.html'}, {'title': 'stage2-1', 'text': 'bg12 \n 專題主題: 自動門 開門機構 \n 組員/分工: \n 40823221/ 網頁編輯、程式模擬、PDF簡報製作 \n 40823237/ 繪製圖檔、程式模擬、Reveal製作 \n 40823250/ 繪製圖檔、網頁編輯 \n 40832244/ 網頁編輯 \n 主題簡述: \n 剛開始會想做項專題的原因是因為在去 年發生了全世界的病毒感染，所以我們 想過類似門或是其他需要人體接觸的地 方盡量能讓人不用用手碰觸。 後來會做此設計也有對接觸做設計，所 以我們將感應器裝在門的周圍，是他可 以自動開啟。 \n - \n bg14 \n 專題主題: 省力搬運機 \n 組員/分工: \n 40823204/SolidWorks 零件繪製、模擬、報告影片 \n 40823205/Inventor 零件繪製、模擬、報告影片 \n 40823220/ Inventor 零件繪製、模擬、報告影片 \n 40832228/ PDF 製作、模擬、報告影片 \n 40823242/應力分析、模擬、報告影片 \n 主題簡述: \n 在工地裡,經常需要用到台車搬運東西,例如裝著水泥的箱子,如果是要靠人力搬運的話,不僅會造成工作效率的減少,也會使搬運人員的體力大量消耗,所以討論過後,我們小組決定設計”省力搬運機”,不僅解決搬運問題,也大幅地提高工作效率與人員體力的損耗。 \n', 'tags': '', 'url': 'stage2-1.html'}, {'title': 'W11 專題動機、直播影片', 'text': '1. stage3主題:無障礙越野車 \n 2.動機:想要一台可以克服各種障礙地形的車子 \n 3.繪圖者:40823220 \n 4.機構:利用萬向接頭帶動蝸桿蝸輪 \n 5.想法:前後輪用雙向馬達驅動，萬象接頭用單向馬達，材料採中空鋁件設計使整體更輕，上面設置供電器 \n \n \n \n \n \n \n \n \n stage3-bg5-40823220 40823250 主題:Task2、ipv4講解、作品的圖檔進度及講解和參考資料 20號:圖檔說明 50號:ipv4講解 影片: \n \n', 'tags': '', 'url': 'W11 專題動機、直播影片.html'}, {'title': 'W12 直播影片、專題修改', 'text': 'stage3-bg5 40823205、40823228 主題 : 解決CMSIMDE版本錯誤 \n 影片: \n \n 40823220網站 \n 本週主要為零件、產品大改良 \n 零件檔載點: 零件檔 \n 更進如下: \n 1.輪胎加大，紋路朝前，為了讓摩擦力增加 \n \n 2.將單向馬達架高，直接驅動蝸桿蝸輪，省略多餘的萬象接頭，使模擬更容易 \n \n 3.輪軸加大，使模擬安插軸更容易 \n 4.更改底板，因應前面所有改動，底板必須符合邏輯的變化 \n \n 5.將不動零件合併化，原本14件縮減到6件，使模擬大幅度容易 \n', 'tags': '', 'url': 'W12 直播影片、專題修改.html'}, {'title': 'W13 程式控制攀爬機', 'text': '經過上周圖檔調整之後，減少零件數目，並可以順利使用CoppeliaSim模擬攀爬機運行。 \n 檔案下載 \n 模擬影片: \n \n 線上同步討論 \n 第一次 \n \n 第二次 \n \n', 'tags': '', 'url': 'W13 程式控制攀爬機.html'}, {'title': 'W14 機械手臂控制', 'text': '利用python程式啟動Robodk執行機械手臂取放圓球步驟 \n \n # KMOLab Portable RoboDK pick and place\nfrom robolink import *    # API to communicate with robodk\nfrom robodk import *      # robodk robotics toolbox\n\n# Setup global parameters\nBALL_DIAMETER = 100 # diameter of one ball\nAPPROACH = 100      # approach distance to grab each part, in mm\nnTCPs = 6           # number of TCP\'s in the tool\n\n#----------------------------------------------\n# Function definitions\n\ndef box_calc(BALLS_SIDE=4, BALLS_MAX=None):\n    """Calculate a list of points (ball center) as if the balls were stored in a box"""\n    if BALLS_MAX is None: BALLS_MAX = BALLS_SIDE**3\n    xyz_list = []\n    for h in range(BALLS_SIDE):\n        for i in range(BALLS_SIDE):\n            for j in range(BALLS_SIDE):\n                xyz_list = xyz_list + [[(i+0.5)*BALL_DIAMETER, (j+0.5)*BALL_DIAMETER, (h+0.5)*BALL_DIAMETER]]\n                if len(xyz_list) >= BALLS_MAX:\n                    return xyz_list\n    return xyz_list\n\ndef pyramid_calc(BALLS_SIDE=4):\n    """Calculate a list of points (ball center) as if the balls were place in a pyramid"""\n    #the number of balls can be calculated as: int(BALLS_SIDE*(BALLS_SIDE+1)*(2*BALLS_SIDE+1)/6)\n    BALL_DIAMETER = 100\n    xyz_list = []\n    sqrt2 = 2**(0.5)\n    for h in range(BALLS_SIDE):\n        for i in range(BALLS_SIDE-h):\n            for j in range(BALLS_SIDE-h):\n                height = h*BALL_DIAMETER/sqrt2 + BALL_DIAMETER/2\n                xyz_list = xyz_list + [[i*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, j*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, height]]\n    return xyz_list\n\ndef balls_setup(frame, positions):\n    """Place a list of balls in a reference frame. The reference object (ball) must have been previously copied to the clipboard."""\n    nballs = len(positions)\n    step = 1.0/(nballs - 1)\n    for i in range(nballs):\n        newball = frame.Paste()\n        newball.setName(\'ball \' + str(i)) #set item name\n        newball.setPose(transl(positions[i])) #set item position with respect to parent\n        newball.setVisible(True, False) #make item visible but hide the reference frame\n        newball.Recolor([1-step*i, step*i, 0.2, 1]) #set RGBA color\n\ndef cleanup_balls(parentnodes):\n    """Delete all child items whose name starts with \\"ball\\", from the provided list of parent items."""\n    todelete = []\n    for item in parentnodes:\n        todelete = todelete + item.Childs()\n\n    for item in todelete:\n        if item.Name().startswith(\'ball\'):\n            item.Delete()\n\ndef TCP_On(toolitem, tcp_id):\n    """Attach the closest object to the toolitem Htool pose,\n    furthermore, it will output appropriate function calls on the generated robot program (call to TCP_On)"""\n    toolitem.AttachClosest()\n    toolitem.RDK().RunMessage(\'Set air valve %i on\' % (tcp_id+1))\n    toolitem.RDK().RunProgram(\'TCP_On(%i)\' % (tcp_id+1));\n        \ndef TCP_Off(toolitem, tcp_id, itemleave=0):\n    """Detaches the closest object attached to the toolitem Htool pose,\n    furthermore, it will output appropriate function calls on the generated robot program (call to TCP_Off)"""\n    toolitem.DetachAll(itemleave)\n    toolitem.RDK().RunMessage(\'Set air valve %i off\' % (tcp_id+1))\n    toolitem.RDK().RunProgram(\'TCP_Off(%i)\' % (tcp_id+1));\n\n\n#----------------------------------------------------------\n# The program starts here:\n\n# Any interaction with RoboDK must be done through RDK:\nRDK = Robolink()\n\n# Turn off automatic rendering (faster)\nRDK.Render(False)\n\n#RDK.Set_Simulation_Speed(500); # set the simulation speed\n\n# Gather required items from the station tree\nrobot = RDK.Item(\'Fanuc M-710iC/50\')\nrobot_tools = robot.Childs()\n#robottool = RDK.Item(\'MainTool\')\nframe1 = RDK.Item(\'Table 1\')\nframe2 = RDK.Item(\'Table 2\')\n\n# Copy a ball as an object (same as CTRL+C)\nballref = RDK.Item(\'reference ball\')\nballref.Copy()\n\n# Run a pre-defined station program (in RoboDK) to replace the two tables\nprog_reset = RDK.Item(\'Replace objects\')\nprog_reset.RunProgram()\n\n# Call custom procedure to remove old objects\ncleanup_balls([frame1, frame2])\n\n# Make a list of positions to place the objects\nframe1_list = pyramid_calc(4)\nframe2_list = pyramid_calc(4)\n\n# Programmatically place the objects with a custom-made procedure\nballs_setup(frame1, frame1_list)\n\n# Delete previously generated tools\nfor tool in robot_tools:\n    if tool.Name().startswith(\'TCP\'):\n        tool.Delete()\n        \n# Calculate tool frames for the suction cup tool of 6 suction cups\nTCP_list = []\nfor i in range(nTCPs):\n    TCPi_pose = transl(0,0,100)*rotz((360/nTCPs)*i*pi/180)*transl(125,0,0)*roty(pi/2)\n    TCPi = robot.AddTool(TCPi_pose, \'TCP %i\' % (i+1))\n    TCP_list.append(TCPi)\n\nTCP_0 = TCP_list[0]\n\n# Turn on automatic rendering\nRDK.Render(True)\n\n# Move balls    \nrobot.setPoseTool(TCP_list[0])\nnballs_frame1 = len(frame1_list)\nnballs_frame2 = len(frame2_list)\nidTake = nballs_frame1 - 1\nidLeave = 0\nidTCP = 0\ntarget_app_frame = transl(2*BALL_DIAMETER, 2*BALL_DIAMETER, 4*BALL_DIAMETER)*roty(pi)*transl(0,0,-APPROACH)\n\nwhile idTake >= 0:\n    # ------------------------------------------------------------------\n    # first priority: grab as many balls as possible\n    # the tool is empty at this point, so take as many balls as possible (up to a maximum of 6 -> nTCPs)\n    ntake = min(nTCPs, idTake + 1)\n\n    # approach to frame 1\n    robot.setPoseFrame(frame1)\n    robot.setPoseTool(TCP_0)\n    robot.MoveJ([0,0,0,0,10,-200])\n    robot.MoveJ(target_app_frame)\n\n    # grab ntake balls from frame 1\n    for i in range(ntake):\n        TCPi = TCP_list[i]\n        robot.setPoseTool(TCPi)\n        # calculate target wrt frame1: rotation about Y is needed since Z and X axis are inverted\n        target = transl(frame1_list[idTake])*roty(pi)*rotx(30*pi/180)\n        target_app = target*transl(0,0,-APPROACH)\n        idTake = idTake - 1        \n        robot.MoveL(target_app)\n        robot.MoveL(target)\n        TCP_On(TCPi, i)\n        robot.MoveL(target_app)\n \n    # ------------------------------------------------------------------\n    # second priority: unload the tool     \n    # approach to frame 2 and place the tool balls into table 2\n    robot.setPoseTool(TCP_0)\n    robot.MoveJ(target_app_frame)\n    robot.MoveJ([0,0,0,0,10,-200])\n    robot.setPoseFrame(frame2)    \n    robot.MoveJ(target_app_frame)\n    for i in range(ntake):\n        TCPi = TCP_list[i]\n        robot.setPoseTool(TCPi)\n        if idLeave > nballs_frame2-1:\n            raise Exception("No room left to place objects in Table 2")\n        \n        # calculate target wrt frame1: rotation of 180 about Y is needed since Z and X axis are inverted\n        target = transl(frame2_list[idLeave])*roty(pi)*rotx(30*pi/180)\n        target_app = target*transl(0,0,-APPROACH)\n        idLeave = idLeave + 1        \n        robot.MoveL(target_app)\n        robot.MoveL(target)\n        TCP_Off(TCPi, i, frame2)\n        robot.MoveL(target_app)\n\n    robot.MoveJ(target_app_frame)\n\n# Move home when the robot finishes\nrobot.MoveJ([0,0,0,0,10,-200])\n \n \n', 'tags': '', 'url': 'W14 機械手臂控制.html'}, {'title': 'w15 直播影片', 'text': '\n 開會討論出新增地形，讓使用者可自行創作地形提供攀爬機攀爬。 \n', 'tags': '', 'url': 'w15 直播影片.html'}, {'title': 'w16 操作方式', 'text': '檔案來源\xa0 40823204 \xa0 \n python remote api 控制 更新 \n \n 按鍵指令 \n "1-4"控制輪子轉彎方向 \n "w" 蝸桿蝸輪控制車體向上 \n "d" 蝸桿蝸輪控制車體向下 \n "a"車子向前 \n "d"車子向前後 \n', 'tags': '', 'url': 'w16 操作方式.html'}, {'title': '問題', 'text': '', 'tags': '', 'url': '問題.html'}, {'title': '缺少Python.exe (3.9.1) 啟動時所對應呼叫的特定 Windows 系統 dll 檔案', 'text': 'Python.exe (3.9.1) 啟動時所對應呼叫的特定 Windows 系統 dll 檔案, 無法正確連結, 但具體原因或處理方法可能要再深入查找 \n 最後的解決方法:  電腦重灌\xa0 \n', 'tags': '', 'url': '缺少Python.exe (3.9.1) 啟動時所對應呼叫的特定 Windows 系統 dll 檔案.html'}, {'title': 'CMSIMDE版本錯誤', 'text': '進入倉儲 => Fork \n \n 會出現 \n \n 之後進入C的tmp底下 git clone -- recurse-submodule 網址 .git 3202 \n \n 然後到隨身碟C槽底下，確認是否clone完成 \n \n 完成之後，因為cmsimde目前是錯誤的版本，所以必須知道最新的版次號，進入老師的倉儲 \n \n 找到最近一次cmsimde的版本 \n \n 複製版次號的前7瑪 \n \n 進入cmsimde \n \n 卻發現是空的 \n \n 開啟黑窗 進入3202的cmsimde裡面 git checkout 版次碼前7碼 \n 之後就推送上 去 \n \n 進入倉儲 => pull request \n \n 進入之後要推送資料 \n \n 出現 \n \n 完成新增 正確版本cmsimde的pull request，之後只要上去抓下來即可 \n \n', 'tags': '', 'url': 'CMSIMDE版本錯誤.html'}, {'title': '課程筆記', 'text': '\n', 'tags': '', 'url': '課程筆記.html'}, {'title': 'Task1', 'text': '參考資料 40823251網站 內容 \n stage3-2b.txt \xa0檔案下載 \n stage3-bg1 repo  |  stage3-bg1 site  |  40823245 repo  |  40823245 site  |  40823251 repo  |  40823251 site  |  40823208 repo  |  40823208 site  |  40823213 repo  |  40823213 site  |  40823232 repo  |  40823232 site  |  40823234 repo  |  40823234 site  |  40823235 repo  |  40823235 site  |  40823246 repo |  40823246 site ---------- stage3-bg2 repo  |  stage3-bg2 site  |  40823217 repo  |  40823217 site  |  40823201 repo  |  40823201 site  |  40823209 repo  |  40823209 site  |  40823210 repo  |  40823210 site  |  40823206 repo  |  40823206 site  |  40823207 repo  |  40823207 site  |  40823223 repo  |  40823223 site  |  40823224 repo |  40823224 site ---------- stage3-bg3 repo  |  stage3-bg3 site  |  40823236 repo  |  40823236 site  |  40823202 repo  |  40823202 site  |  40823203 repo  |  40823203 site  |  40823212 repo  |  40823212 site  |  40823219 repo  |  40823219 site  |  40823222 repo  |  40823222 site  |  40823231-2 repo  |  40823231-2 site  |  40823244 repo |  40823244 site ---------- stage3-bg4 repo  |  stage3-bg4 site  |  40823239 repo  |  40823239 site  |  s40723140 repo  |  s40723140 site  |  s40723128 repo  |  s40723128 site  |  s40723139 repo  |  s40723139 site  |  s40723106 repo  |  s40723106 site  |  s40723135 repo  |  s40723135 site  |  s40723143 repo  |  s40723143 site  |  s40723215 repo |  s40723215 site ---------- stage3-bg5 repo  |  stage3-bg5 site  |  40823221 repo  |  40823221 site  |  40823204 repo  |  40823204 site  |  40823205 repo  |  40823205 site  |  40823220 repo  |  40823220 site  |  40823228 repo  |  40823228 site  |  40823237 repo  |  40823237 site  |  40823242 repo  |  40823242 site  |  40823250 repo |  40823250 site  |  40832244 repo |  40832244 site ---------- stage3-bg6 repo  |  stage3-bg6 site  |  40823225 repo  |  40823225 site  |  40823214 repo  |  40823214 site  |  40823218 repo  |  40823218 site  |  40823211 repo  |  40823211 site  |  40823248 repo  |  40823248 site  |  40823247 repo  |  40823247 site  |  40823216 repo  |  40823216 site  |  40823238 repo |  40823238 site ---------- stage3-bg7 repo  |  stage3-bg7 site  |  40623144 repo  |  40623144 site  |  40823233 repo  |  40823233 site  |  s40723224 repo  |  s40723224 site  |  40823241 repo  |  40823241 site  |  40423155 repo  |  40423155 site  |  40823227 repo  |  40823227 site  |  s40723233 repo  |  s40723233 site \n def stu2b(account):\n    if account == "40823231":\n        return account + "-2"\n    elif account[0:3] == "407":\n        return "s" + account\n    else:\n        return account\n  \nteamb = []\n  \n# open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nwith open("stage3_2b.txt") as fh:\n    # readlines will read into the whole line and put into list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n#print(len(data))\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    teamb.append(group)\n      \noutput = ""    \nseperator = "-"*10 + "<br />"\n  \nfor i in teamb[0:]:\n    team = i[0]\n    leader = stu2b(i[1])\n    m1 = stu2b(i[3])\n    m2 = stu2b(i[5])\n    m3 = stu2b(i[7])\n    m4 = stu2b(i[9])\n    m5 = stu2b(i[11])\n    m6 = stu2b(i[13])\n      \n    try:\n        m7 = stu2b(i[15])\n    except:\n        m7 = ""\n    try:\n        m8 = stu2b(i[17])\n    except:\n        m8 = ""\n          \n    leaderrepo = "<a href=\'http://github.com/" + leader + "/cd2021\'>" + leader + " repo</a>"\n    leadersite = "<a href=\'http://" + leader + ".github.io/cd2021\'>" + leader +  " site</a>"\n    m1repo = "<a href=\'http://github.com/" + m1 + "/cd2021\'>" + m1 + " repo</a>"\n    m1site = "<a href=\'http://" + m1 + ".github.io/cd2021\'>" + m1 +  " site</a>"\n    m2repo = "<a href=\'http://github.com/" + m2 + "/cd2021\'>" + m2 + " repo</a>"\n    m2site = "<a href=\'http://" + m2 + ".github.io/cd2021\'>" + m2 +  " site</a>"\n    m3repo = "<a href=\'http://github.com/" + m3 + "/cd2021\'>" + m3 + " repo</a>"\n    m3site = "<a href=\'http://" + m3 + ".github.io/cd2021\'>" + m3 +  " site</a>"\n    m4repo = "<a href=\'http://github.com/" + m4 + "/cd2021\'>" + m4 + " repo</a>"\n    m4site = "<a href=\'http://" + m4 + ".github.io/cd2021\'>" + m4 +  " site</a>"\n    m5repo = "<a href=\'http://github.com/" + m5 + "/cd2021\'>" + m5 + " repo</a>"\n    m5site = "<a href=\'http://" + m5 + ".github.io/cd2021\'>" + m5 +  " site</a>"\n    m6repo = "<a href=\'http://github.com/" + m6 + "/cd2021\'>" + m6 + " repo</a>"\n    m6site = "<a href=\'http://" + m6 + ".github.io/cd2021\'>" + m6 +  " site</a>"\n   \n  \n    teamrepo = "<a href=\'http://github.com/" + leader + "/" + team + "\'>" + team + " repo</a>"\n    teamsite =  "<a href=\'http://" + m1 + ".github.io/" + team + "\'>" + team +  " site</a>"\n  \n    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site \n      \n    if m7 != "":\n       m7repo = "<a href=\'http://github.com/" + m7 + "/cd2021\'>" + m7 + " repo</a>"\n       m7site = "<a href=\'http://" + m7 + ".github.io/cd2021\'>" + m7 +  " site</a>"   \n       output += " |  " + m7repo + "| " + m7site\n    else:\n        output += "" \n      \n    if m8 != "":\n       m8repo = "<a href=\'http://github.com/" + m8 + "/cd2021\'>" + m8 + " repo</a>"\n       m8site = "<a href=\'http://" + m8 + ".github.io/cd2021\'>" + m8 +  " site</a>"   \n       output += " |  " + m8repo + "| " + m8site + "<br />" + seperator\n    else:\n        output += "<br />" + seperator\n  \n  \nprint(output)\n# the following will use group data to generate needed html\n \n \n \n', 'tags': '', 'url': 'Task1.html'}, {'title': 'Task2', 'text': '', 'tags': '', 'url': 'Task2.html'}, {'title': 'stage1-2', 'text': '進入CoppeliaSim模擬之後，也許是設定的問題，導致無法順利作動，目前正在排除。 \n 模擬影片: \n 模擬檔案下載 \n 模擬影片2: \n stage-bg16 \n \n stage-bg24 \n \n', 'tags': '', 'url': 'stage1-2.html'}, {'title': 'stage2-2', 'text': 'stage2-bg12 \n \n stage2-bg14 \n 控制方式:上下控制角度 左右控制前後 \n \n', 'tags': '', 'url': 'stage2-2.html'}, {'title': 'stage3', 'text': '專題題目:攀爬機 \n 控制方式: \n QA上下 Z停止 WS後輪正反轉 X停止 ED前輪正反轉 C停止 \n 前正後反 左轉 前反後正 右轉 \n 模擬影片: \n \n 模擬檔案下載 \n \n', 'tags': '', 'url': 'stage3.html'}, {'title': 'Task3', 'text': '', 'tags': '', 'url': 'Task3.html'}, {'title': 'W16', 'text': 'W16 exam\xa0 檔案下載 \n 1. Onshape 零組件繪製 \xa0 \n 零件繪製過程\xa0  Onshape檔案連結 \n \n 2. 建立 CoppeliaSim 4.1.0 MTB robot 場景 \n 檔案下載 \n 程式: \n function sysCall_init()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    deg1=0\n    deg2=0\n    deg3=0\nend\n\nfunction sysCall_actuation()\n    message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==2009) then\n            deg1=deg1+1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==2010) then\n            deg1=deg1-1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==2007) then\n            deg2=deg2+1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==2008) then\n            deg2=deg2-1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==115) then\n                   sim.setJointTargetPosition(jointz,-0.02)\n                   sim.setIntegerSignal(\'pad_switch\',1)\n                end\n            if (auxiliaryData[1]==119) then\n                   sim.setJointTargetPosition(jointz,0)\n                end\n            if (auxiliaryData[1]==32) then\n                   sim.setIntegerSignal(\'pad_switch\',0)\n                end\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()\n    end        \nend\n\nfunction sysCall_sensing()\n    -- put your sensing code here\nend\n\nfunction sysCall_cleanup()\n    -- do some clean-up here\n\n\n-- See the user manual or the available code snippets for additional callback functions and details\n   end \n 3. 手臂末端加入 components-gripper-suction pad 吸盤 \n 程式: \n function sysCall_init() \n    --this is teach by 40823214\n    objectHandle=sim.getObjectHandle(\'suctionPad\')\n    sim.setUserParameter(objectHandle,\'@enable\',\'\')\n    modelBase=sim.getObjectAssociatedWithScript(sim.handle_self)\n    robotBase=modelBase\n    while true do\n        robotBase=sim.getObjectParent(robotBase)\n        if robotBase==-1 then\n            robotName=\'Dobot\'\n            break\n        end\n        robotName=sim.getObjectName(robotBase)\n        suffix,suffixlessName=sim.getNameSuffix(robotName)\n        if suffixlessName==\'Dobot\' then\n            break\n        end\n    end\n\n    s=sim.getObjectHandle(\'suctionPadSensor\')\n    l=sim.getObjectHandle(\'suctionPadLoopClosureDummy1\')\n    l2=sim.getObjectHandle(\'suctionPadLoopClosureDummy2\')\n    b=sim.getObjectHandle(\'suctionPad\')\n    suctionPadLink=sim.getObjectHandle(\'suctionPadLink\')\n    local gripperBase=sim.getObjectAssociatedWithScript(sim.handle_self)\n\n    infiniteStrength=sim.getScriptSimulationParameter(sim.handle_self,\'infiniteStrength\')\n    maxPullForce=sim.getScriptSimulationParameter(sim.handle_self,\'maxPullForce\')\n    maxShearForce=sim.getScriptSimulationParameter(sim.handle_self,\'maxShearForce\')\n    maxPeelTorque=sim.getScriptSimulationParameter(sim.handle_self,\'maxPeelTorque\')\n\n    sim.setLinkDummy(l,-1)\n    sim.setObjectParent(l,b,true)\n    m=sim.getObjectMatrix(l2,-1)\n    sim.setObjectMatrix(l,-1,m)\nend\n\nfunction sysCall_cleanup() \n    --this is teach by 40823214\n    sim.setLinkDummy(l,-1)\n    sim.setObjectParent(l,b,true)\n    m=sim.getObjectMatrix(l2,-1)\n    sim.setObjectMatrix(l,-1,m)\nend \n\nfunction sysCall_sensing() \n    parent=sim.getObjectParent(l)\n    --this is teach by 40823214\n    local sig=sim.getIntegerSignal("pad_switch")\n    if (not sig) or (sig==0) then\n        if (parent~=b) then\n            sim.setLinkDummy(l,-1)\n            sim.setObjectParent(l,b,true)\n            m=sim.getObjectMatrix(l2,-1)\n            sim.setObjectMatrix(l,-1,m)\n        end\n    else\n        if (parent==b) then\n            index=0\n            while true do\n                shape=sim.getObjects(index,sim.object_shape_type)\n                if (shape==-1) then\n                    break\n                end\n                local res,val=sim.getObjectInt32Parameter(shape,sim.shapeintparam_respondable)\n                if (shape~=b) and (val~=0) and (sim.checkProximitySensor(s,shape)==1) then\n                    -- Ok, we found a respondable shape that was detected\n                    -- We connect to that shape:\n                    -- Make sure the two dummies are initially coincident:\n                    sim.setObjectParent(l,b,true)\n                    m=sim.getObjectMatrix(l2,-1)\n                    sim.setObjectMatrix(l,-1,m)\n                    -- Do the connection:\n                    sim.setObjectParent(l,shape,true)\n                    sim.setLinkDummy(l,l2)\n                    break\n                end\n                index=index+1\n            end\n        else\n            -- Here we have an object attached\n            if (infiniteStrength==false) then\n                -- We might have to conditionally beak it apart!\n                result,force,torque=sim.readForceSensor(suctionPadLink) -- Here we read the median value out of 5 values (check the force sensor prop. dialog)\n                if (result>0) then\n                    breakIt=false\n                    if (force[3]>maxPullForce) then breakIt=true end\n                    sf=math.sqrt(force[1]*force[1]+force[2]*force[2])\n                    if (sf>maxShearForce) then breakIt=true end\n                    if (torque[1]>maxPeelTorque) then breakIt=true end\n                    if (torque[2]>maxPeelTorque) then breakIt=true end\n                    if (breakIt) then\n                        -- We break the link:\n                        sim.setLinkDummy(l,-1)\n                        sim.setObjectParent(l,b,true)\n                        m=sim.getObjectMatrix(l2,-1)\n                        sim.setObjectMatrix(l,-1,m)\n                    end\n                end\n            end\n        end\n    end\nend \n--by 40823214 \n 由  40823214  林厚宇教學 \n 4. 逆向運動學函式 \n 程式: \n function moving(x,y)\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 then\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    sim.setJointTargetPosition(joint01,deg1)\n    sim.setJointTargetPosition(joint02,-deg2)\n    sim.setJointTargetPosition(joint03,deg3)\nend\n\n\nfunction sysCall_threadmain()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.02)\n    sim.wait(5)\n    sim.setJointTargetPosition(jointz,0)\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do\n    moving(0.2,0.7)\n    sim.wait(5)\n    sim.setIntegerSignal("pad_switch",0)\n    sim.wait(5)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.1)\n    sim.wait(5)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(5)\n    moving(-0.3,-0.55)\n    sim.wait(2)\n    sim.setIntegerSignal("pad_switch",0)\n    sim.wait(5)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.1)\n    sim.wait(5)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(5)\n    end\n\nend\n\nfunction sysCall_cleanup()\n    -- Put some clean-up code here\nend\n\n-- See the user manual or the available code snippets for additional callback functions and details\n \n 5. Python remote API 逆向運動學函式 \n 程式: \n import sim as vrep\nimport math\nimport random\nimport time\nimport math\n\n\nprint (\'Start\')\n \nvrep.simxFinish(-1)\n \nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n  \nif clientID != -1:\n    print (\'Connected to remote API server\')\n      \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "This is teach by 40823214",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n  \n     \n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming \n  \n     \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)\n       \n    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,jointz,-0.015,opmode)\n    time. sleep(1)\n    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode) \n 心得感想 \n 很感謝40823214林厚宇，花費許多時間來教導大家關於CoppeliaSim及相關程式基礎，如果沒有他的話，我應該很難完成這項任務，而在進行任務的同時，我也學到了很多，也對程式跟CoppeliaSim更加熟悉了解了。 \n', 'tags': '', 'url': 'W16.html'}, {'title': 'w17', 'text': '期末個人簡介報告 \n \n', 'tags': '', 'url': 'w17.html'}, {'title': 'w18', 'text': '', 'tags': '', 'url': 'w18.html'}, {'title': '課程心得', 'text': '經過本學期的課程，讓我學習到了許多，不僅是在專題設計上或是在CoppeliaSim的操作上，也讓我體會到了協同產品設計並非字面上那樣簡單，其中包括了團隊分工，而真正困難的點是一個團隊不是只有一個人，必須兼顧和採納組員的感受及想法，如果大家都能替團隊設想，那肯定可以創造非常有價值性的東西，另外，程式的部分，也讓我了解到自己欠缺了甚麼能力，也就是當你看到介面全部都是英文時，而自己卻不知該如何下手，只能依靠網路上的字典翻譯找尋答案，所以接下來，我會繼續精進自己的能力，並更努力學習，創造自我價值。', 'tags': '', 'url': '課程心得.html'}]};